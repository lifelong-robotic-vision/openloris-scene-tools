
tsinghua_robot_tf = [
    ('d400_color', 'base_link', [-0.038620319261091184, 0.9152084480906179, -0.2320955085243974, 0.49676229968284136, -0.4998795887129771, 0.49510681269354095, 0.5081504289345848]),
    ('d400_depth', 'base_link', [-0.05563901333246131, 0.914203881696741, -0.23619689676652428, 0.49538006860636946, -0.499547351423095, 0.49840674562280746, 0.5065982108450463]),
    ('d400_imu', 'base_link', [-0.061159013133332565, 0.9193038816796133, -0.22445689655448112, 0.49538006860636946, -0.499547351423095, 0.49840674562280746, 0.5065982108450463]),
    ('t265_fisheye1', 'base_link', [-0.02706564536401801, 0.8928762667226625, -0.24726275255536762, 0.49597362846259985, -0.49833071591566847, 0.4958921122758979, 0.5096740825539088]),
    ('t265_fisheye2', 'base_link', [-0.08654652812832868, 0.8920650020903839, -0.2508458906715935, 0.4925125657739745, -0.4999316027612397, 0.4977612079783228, 0.5096406037074316]),
    ('t265_imu', 'base_link', [0.030638833154284475, -0.8937147744472972, -0.24521073416776434, 0.5030437335657986, 0.49268060367606764, 0.5074439466966938, -0.4967025929491915]),
    ('base_link', 'd400_color', [0.2264836849091656, -0.05114194035652147, 0.916, -0.49676229968284136, 0.4998795887129771, -0.49510681269354095, 0.5081504289345848]),
    ('base_link', 'd400_depth', [0.22722047136786871, -0.06601512576001335, 0.9157872415132173, -0.49538006860636935, 0.49954735142309487, -0.49840674562280746, 0.5065982108450463]),
    ('base_link', 'd400_imu', [0.21545245195759705, -0.07164430142403165, 0.9206998887739904, -0.49538006860636935, 0.49954735142309487, -0.49840674562280746, 0.5065982108450463]),
    ('base_link', 't265_fisheye1', [0.23757012582874237, -0.038724749600647444, 0.8950755692783204, -0.49597362846259985, 0.49833071591566835, -0.4958921122758979, 0.5096740825539088]),
    ('base_link', 't265_fisheye2', [0.2379100555955274, -0.10269086731607438, 0.8938944689217037, -0.4925125657739745, 0.4999316027612397, -0.4977612079783229, 0.5096406037074316]),
    ('base_link', 't265_imu', [0.23769333650938815, -0.04942265635384921, 0.894903580913328, 0.5030437335657985, 0.49268060367606764, 0.5074439466966938, 0.4967025929491916]),
]

gaussian_robot_tf = [
    ('d400_color', 'base_link', [0.0012016270882699506, 1.2428374386538528, -0.22654996920565584, 0.5508509426177262, -0.5167305893488637, 0.4497677095312453, 0.47671977566632984]),
    ('d400_depth', 'base_link', [-0.018047491440315123, 1.2424860452516409, -0.2282331206725837, 0.5499697614834611, -0.5171593202226934, 0.4537274051736184, 0.47350917705472384]),
    ('d400_imu', 'base_link', [-0.02357982637770463, 1.2480204121660317, -0.21397355437148347, 0.5504510403790713, -0.5176133892954979, 0.4532057328200386, 0.47295305803713467]),
    ('t265_fisheye1', 'base_link', [0.05890115250088481, 0.3237292432850775, -1.0568514707735135, 0.394983016095454, -0.4059825431259604, 0.5999742016639807, 0.5649757065669153]),
    ('t265_fisheye2', 'base_link', [0.0016477330264546182, 0.3194050682227456, -1.0577358402582786, 0.3919558964011141, -0.40672335425280526, 0.6018891254946374, 0.5645140999063238]),
    ('t265_imu', 'base_link', [-0.06151968566184456, -0.3263341035388851, -1.0553579423825712, -0.4108974443723151, -0.3914168549779065, -0.5636503288904802, 0.600211998038325]),
    ('base_link', 'd400_color', [0.398363566676407, 0.029117046016620643, 1.198511534258444, 0.5508509426177262, -0.5167305893488635, 0.44976770953124534, -0.47671977566632984]),
    ('base_link', 'd400_depth', [0.399546294466062, 0.014453458565135675, 1.1984746547500458, 0.5499697614834611, -0.5171593202226934, 0.4537274051736184, -0.47350917705472384]),
    ('base_link', 'd400_imu', [0.38894162200484866, 0.00842158791024528, 1.2052174620767606, 0.5504510403790713, -0.5176133892954977, 0.4532057328200385, -0.47295305803713444]),
    ('base_link', 't265_fisheye1', [0.873, 0.026, 0.68, -0.3949830160954541, 0.40598254312596027, -0.5999742016639807, 0.5649757065669153]),
    ('base_link', 't265_fisheye2', [0.8696611328664977, -0.03799129213961659, 0.6804951110039751, -0.3919558964011141, 0.40672335425280526, -0.6018891254946375, 0.5645140999063238]),
    ('base_link', 't265_imu', [0.8724694754706082, 0.015314402373202411, 0.6801628399570413, 0.4108974443723151, 0.39141685497790646, 0.5636503288904802, 0.600211998038325]),
]

def get_tf_values(scene, parent, child):
    if parent == child:
        return [0,0,0,0,0,0,1]
    if scene in ['office', 'corridor', 'cafe', 'home']:
        tfs = tsinghua_robot_tf
    elif scene == 'market':
        tfs = gaussian_robot_tf
    else:
        exit('Invalid scene %s' % scene)
    for tf in tfs:
        if parent == tf[0] and child == tf[1]:
            return tf[2]
    exit('Cannot find tf of %s from %s for %s' % (parent, child, scene))